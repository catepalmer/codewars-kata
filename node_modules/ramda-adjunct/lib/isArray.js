'use strict';

exports.__esModule = true;

var _curry = /*#__PURE__*/require('ramda/src/internal/_curry1');

var _curry2 = /*#__PURE__*/_interopRequireDefault(_curry);

var _isArray2 = /*#__PURE__*/require('ramda/src/internal/_isArray');

var _isArray3 = /*#__PURE__*/_interopRequireDefault(_isArray2);

var _isFunction = /*#__PURE__*/require('./isFunction');

var _isFunction2 = /*#__PURE__*/_interopRequireDefault(_isFunction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if input value is `Array`.
 *
 * @func isArray
 * @memberOf RA
 * @since {@link https://char0n.github.io/ramda-adjunct/0.3.0|v0.3.0}
 * @category Type
 * @sig * -> Boolean
 * @param {*} val The value to test
 * @return {boolean}
 * @see {@link RA.isNotArray|isNotArray}
 * @example
 *
 * RA.isArray([]); //=> true
 * RA.isArray(null); //=> false
 * RA.isArray({}); //=> false
 */
var isArray = /*#__PURE__*/(0, _curry2.default)( /*#__PURE__*/(0, _isFunction2.default)(Array.isArray) ? Array.isArray : _isArray3.default);

exports.default = isArray;