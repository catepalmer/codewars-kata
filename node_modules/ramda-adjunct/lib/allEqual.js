'use strict';

exports.__esModule = true;

var _ramda = /*#__PURE__*/require('ramda');

var _curry = /*#__PURE__*/require('ramda/src/internal/_curry1');

var _curry2 = /*#__PURE__*/_interopRequireDefault(_curry);

var _lengthLte = /*#__PURE__*/require('./lengthLte');

var _lengthLte2 = /*#__PURE__*/_interopRequireDefault(_lengthLte);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Original idea for this function was conceived by https://github.com/jackmellis
// in https://github.com/char0n/ramda-adjunct/pull/513.

/**
 * Returns true if all items in the list are equivalent using `R.equals` for equality comparisons.
 *
 * @func allEqual
 * @memberOf RA
 * @since {@link https://char0n.github.io/ramda-adjunct/2.9.0|v2.9.0}
 * @category List
 * @sig [a] -> Boolean
 * @param {Array} list The list of values
 * @return {boolean}
 * @see {@link https://ramdajs.com/docs/#equals|equals}
 * @example
 *
 * RA.allEqual([ 1, 2, 3, 4 ]); //=> false
 * RA.allEqual([ 1, 1, 1, 1 ]); //=> true
 * RA.allEqual([]); //=> true
 *
 */
var allEqual = /*#__PURE__*/(0, _curry2.default)( /*#__PURE__*/(0, _ramda.pipe)(_ramda.uniq, /*#__PURE__*/(0, _lengthLte2.default)(1)));

exports.default = allEqual;